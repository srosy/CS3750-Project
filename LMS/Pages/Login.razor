@page "/login";
@layout UnauthenticatedLayout;
@using Shared.Models;
@using Data;
@inject NavigationManager NavMan;
@inject IDbService DbService;
@inject AzureDbContext AzureDb;
@inject Blazored.LocalStorage.ILocalStorageService Storage;

<div class="row ">
    <div class="col-md-4"></div>
    <div class="col-md-4">
        <div class="card LMS-card">
            <div class="card-header LMS-title text-center">
                <h3>Login</h3>
            </div>
            <div class="card-body">
                <EditForm Model="@authModel" OnValidSubmit="@TryAuthenticate">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="form-group">
                        <div style="padding-bottom:5px">
                            <label for="LMSusername"><strong>Username</strong></label>
                            <InputText id="LMSusername" class="form-control LMS-input" type="text" placeholder="Username/Email" @bind-Value="authModel.UserName" 
                                       style="width:100%"/>
                        </div>
                        <div>
                            <label for="LMSpassword" style="padding-bottom:-3px"><strong>Password</strong></label>
                            <InputText id="LMSpassword" class="form-control LMS-input" type="password" placeholder="Password" @bind-Value="authModel.Password" 
                                       style="width:100%"/>
                        </div>

                        <button class="btn btn-primary LMS-btn float-right" type="submit">Submit</button>
                    </div>
                </EditForm>

                <a href="/newaccount">Don't have an account?</a>

                @if (!string.IsNullOrEmpty(message))
                {
                    <p class="LMS-message">@message</p>
                }
            </div>
        </div>
    </div>
    <div class="col-md-4"></div>
</div>

@code {
    private AuthModel authModel = new AuthModel();
    private string message = string.Empty;

    /// <summary>
    /// Attempt to authenticate a user.
    /// </summary>
    private async void TryAuthenticate()
    {
        var authenticated = await DbService.Authenticate(Storage, AzureDb, authModel);
        if (authenticated)
        {
            NavMan.NavigateTo("dashboard");
        }
        else
        {
            message = "Login failed.";
        }
    }
}
