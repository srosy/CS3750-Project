@page "/newaccount";
@layout UnauthenticatedLayout;

<div class="row text-center">
    <div class="col-md-4"></div>
    <div class="col-md-6">
        <div class="card LMS-card">
            <div class="card-header LMS-title">
                <h3>New Account</h3>
            </div>
            <div class="card card-body">
                <EditForm Model="Model" OnValidSubmit="@CreateAccount">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="form-group has-success">
                        <InputText id="fname" class="form-control LMS-input" type="text" placeholder="First Name" @bind-Value="Model.FirstName" />
                    </div>
                    <div class="form-group has-success">
                        <InputText id="lname" class="form-control LMS-input" type="text" placeholder="Last Name" @bind-Value="Model.LastName" />
                    </div>
                    <div class="form-group">
                        <InputDate id="birthday" class="form-control LMS-input" title="Users must be 18+" type="date" @bind-Value="Model.Birthday" />
                    </div>
                    <div class="form-group has-success">
                        <InputText id="email" class="form-control LMS-input" type="text" placeholder="Email" @bind-Value="Model.Email" />
                    </div>
                    <div class="form-group has-success">
                        <InputText id="password" class="form-control LMS-input" type="password" placeholder="Password" @bind-Value="Model.Auth.Password" />
                    </div>
                    <div class="form-group has-success">
                        <InputText id="confirm-password" class="form-control LMS-input" type="password" placeholder="Re-enter password" @bind-Value="ConfirmPassword" />
                    </div>
                    <div class="form-group">
                        <select id="role" class="form-control LMS-Input" @bind="Model.Role">
                            <option value="0" selected>- Select Role -</option>
                            <option value="1">Student</option>
                            <option value="2">Instructor</option>
                        </select>
                    </div>

                    <button class="btn btn-primary LMS-btn" type="submit">Create Account</button>
                </EditForm>

                <a href="/login">Already have an account?</a>

                @if (!string.IsNullOrEmpty(_message))
                {
                    <p class="LMS-message">@_message</p>
                }
            </div>
        </div>
    </div>
    <div class="col-md-4"></div>
</div>

@code {
    private AccountViewModel Model = new AccountViewModel();
    private string _message = string.Empty;
    private string ConfirmPassword;
    private DateTime MinDate = DateTime.UtcNow.AddYears(-100);
    private DateTime MaxDate = DateTime.UtcNow.AddYears(-18).AddDays(1);
    private DateTime today;

    protected async override Task OnInitializedAsync()
    {
        Model.Birthday = DateTime.UtcNow.AddYears(-18); // must be at least 18
    }

    /// <summary>
    /// Creates the account from binding on the Edit form Model.
    /// </summary>
    private async void CreateAccount()
    {
        if (Model.Role <= 0)
        {
            _message = "User must select a type";
            return;
        }

        if (Model.Birthday > MaxDate || Model.Birthday < MinDate)
        {
            _message = $"DOB must be between {MinDate.ToShortDateString()} and {MaxDate.ToShortDateString()}";
            return;
        }

        if (!ConfirmPassword.Equals(Model.Auth.Password))
        {
            _message = "Passwords do not match!";
            return;
        }

        var acctCreated = await DbService.CreateAccount(AzureDb, Model);
        if (acctCreated)
        {
            _message = "Account Created. Proceed to login page.";
            NavMan.NavigateTo("login");
        }

        _message = "Error trying to create account. Account may already exist.";
    }
}
