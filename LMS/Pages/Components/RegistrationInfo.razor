@if (!_loading)
{
    @if (Role == Role.PROFESSOR)
    {
        <MatTable Items="_courses" class="mat-elevation-z5 lms-table dashboard-enrollment-table" Striped="true" ShowPaging="false">
            <MatTableHeader>
                <th class="ef-th">Courses You're Instructing</th>
            </MatTableHeader>
            <MatTableRow>
                <td class="ef-td"><a href="/courses">@($"{context.Name} - {context.Description}")</a></td>
            </MatTableRow>
        </MatTable>
    }
    else
    {
        <MatTable Items="_enrollments" class="mat-elevation-z5 lms-table dashboard-enrollment-table" Striped="true" ShowPaging="false">
            <MatTableHeader>
                @{ var title = _enrollments.Any() ? "Registered Courses" : "No Registered Courses"; }
                <th class="ef-th">
                    @if (!_enrollments.Any())
                    {
                        @title <br />
                        <a href="registration">Register Now</a>
                    }
                    else
                    {
                        @title
                    }
                </th>
            </MatTableHeader>
            <MatTableRow>
                @{
                            var info = "No Course";
                    @if (_courses.Any())
                            {
                                var course = _courses.First(c => c.CourseId == context.CourseId);
                                info = $"{course.Name} - {course.Description}";
                        <td class="ef-td">
                            <a href="/course/details/@course.CourseId" title="Goto course page">@info</a>
                        </td>
                            }
                            else
                            {
                        <td class="ef-td">
                            "No Course"
                        </td>
                            }
                }
            </MatTableRow>
        </MatTable>
    }
}

@code {
    private bool _loading = true;
    private List<Enrollment> _enrollments;
    private List<Course> _courses;
    [Parameter] public Role Role { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        _enrollments = await BrowserStorage<List<Enrollment>>.GetObject(Storage, "enrollments");
        _courses = await BrowserStorage<List<Course>>.GetObject(Storage, "courses");
        _loading = false;
    }
}
